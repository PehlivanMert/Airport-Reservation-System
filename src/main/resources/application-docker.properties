server.port=8085
# --------------------------------------------------------
### Datasource Configs - Postgres
spring.datasource.url=jdbc:postgresql://postgres:5432/airport_reservation_system_db
#spring.datasource.url=jdbc:postgresql://host.docker.internal:5432/airport_reservation_system_db
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=1514
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.sql.init.mode=always

# --------------------------------------------------------
### Spring Actuator Configs
management.server.port=8085
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.info.enabled=true
management.info.env.enabled=true

# --------------------------------------------------------
### Default RabbitMQ configs
#spring.rabbitmq.host=host.docker.internal
#spring.rabbitmq.host=rabbitmq
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest

# --------------------------------------------------------
#### Security
security.jwt.token.secret-key=secret-key
# 5 minutes duration by default: 5 minutes * 60 seconds * 1000 milliseconds
security.jwt.token.expire-length=30000000

# --------------------------------------------------------
# Kafka configs
spring.kafka.bootstrap-servers=kafka:9092
kafka.bootstrapAddress=kafka:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.group-id=airport-reservation-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer